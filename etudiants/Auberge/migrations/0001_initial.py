# Generated by Django 5.2.5 on 2025-09-12 00:36

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Auberge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomAuberge', models.CharField(max_length=100)),
                ('adresseAuberge', models.CharField(max_length=200)),
                ('description', models.TextField(max_length=500, null=True)),
            ],
            options={
                'verbose_name': 'Auberge',
                'verbose_name_plural': 'Auberge',
            },
        ),
        migrations.CreateModel(
            name='Etudiant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numEtudiant', models.CharField(max_length=10, null=True)),
                ('nom', models.CharField(max_length=80)),
                ('prenom', models.CharField(max_length=80)),
                ('numPossport', models.CharField(max_length=20, null=True)),
                ('telephone', models.CharField(max_length=20, null=True)),
                ('email', models.CharField(default='di@gmail.com', max_length=80)),
                ('domFormation', models.CharField(default='informatique', max_length=90)),
                ('dateNaissance', models.DateField()),
                ('type', models.CharField(choices=[('boursierEtatMalien', 'boursier Etat Malien'), ('boursierEtatRusse', 'boursier Etat Russe'), ('Contractuel', 'Contractuel')], default='Boursier Etat Malien')),
                ('sexe', models.CharField(choices=[('m', 'M'), ('f', 'F')])),
            ],
            options={
                'verbose_name': 'Etudiant',
                'verbose_name_plural': 'Etudiant',
            },
        ),
        migrations.CreateModel(
            name='TypeChambre',
            fields=[
                ('numTypeChambre', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('TYPE', models.CharField(choices=[('Chambre pour quatre personnes', 'Chambre_4'), ('chambre pour deux personnes', 'Chambre_2')])),
            ],
            options={
                'verbose_name': 'Type de Chambre',
                'verbose_name_plural': 'Types de Chambre',
            },
        ),
        migrations.CreateModel(
            name='Etage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomEtage', models.CharField(max_length=50)),
                ('numAuberge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Auberge.auberge')),
            ],
            options={
                'verbose_name': 'Etage',
                'verbose_name_plural': 'Etage',
            },
        ),
        migrations.CreateModel(
            name='Chambre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomChambre', models.CharField(default='Chambre', max_length=50)),
                ('etage', models.ForeignKey(default='01', on_delete=django.db.models.deletion.CASCADE, to='Auberge.etage')),
                ('numTypeChambre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Auberge.typechambre')),
            ],
            options={
                'verbose_name': 'Chambre',
                'verbose_name_plural': 'Chambres',
            },
        ),
        migrations.CreateModel(
            name='Habiter',
            fields=[
                ('numHabiter', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('nombre', models.IntegerField(default=1, max_length=4)),
                ('numChambre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vivre', to='Auberge.chambre')),
                ('numEtudiant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Auberge.etudiant')),
            ],
            options={
                'verbose_name': 'Habiter',
                'verbose_name_plural': 'Habiter',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
